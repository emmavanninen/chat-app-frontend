{"version":3,"sources":["api/axiosConfig.js","api/axios-helpers.js","components/Context/Context.js","components/Nav/Tabs/TabContent/RegisterForm/RegisterForm.js","components/Nav/Tabs/TabContent/LoginForm/LoginForm.js","components/Nav/TabContent/UserProfile/UserProfile.js","components/Nav/TabContent/EditUser/EditUser.js","components/FadeInOut/FadeInOut.js","components/Nav/Tabs/Tabs.js","components/Nav/Tabs/Tab.js","components/Nav/Nav.js","components/Chat/ChatBoard/SendMessageForm/SendMessageForm.js","components/Chat/ChatBoard/MessageList/Message/Message.js","components/Chat/ChatBoard/MessageList/MessageList.js","components/Chat/ChatBoard/ChatBoard.js","components/Chat/ChatSidebar/ChatUserList/ChatUser/ChatUser.js","components/Chat/ChatSidebar/ChatUserList/ChatUserList.js","components/Chat/ChatSidebar/ChatSidebar.js","components/Chat/Chat.js","App.js","index.js"],"names":["instance","axios","create","baseURL","headers","console","log","process","setAuthHeader","token","Axios","defaults","common","checkTokenAndReturn","localStorage","getItem","userData","jwt_decode","currentTime","Date","now","exp","removeItem","signup","formBody","a","post","response","signin","getUser","get","success","data","editUser","user","put","getChannelMessages","roomName","getChannelUsers","createContext","RegisterForm","state","username","email","password","confirmPassword","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","res","status","setItem","context","setAuth","errors","kind","className","onSubmit","this","type","placeholder","onChange","autoComplete","Component","contextType","Context","LoginForm","errorMsg","handleToast","UserProfile","getUserInfo","src","photo","alt","onClick","logout","EditUser","oldPassword","confirmNewPassword","key","updatedUser","element","newPassword","FadeInOut","maxIsVisible","delay","props","timeOut","setTimeout","count","React","Children","children","i","interval","setInterval","clearInterval","map","child","childClassName","style","transition","top","opacity","Tabs","activeTab","handleTabClick","tab","renderTabsChildrenAsProps","index","cloneElement","bgColor","isAuth","toastMsg","error","UsernameGenerator","generateUsername","event","Tab","isActive","backgroundColor","href","label","Nav","notification","channels","channel","to","SendMessageForm","body","trim","createMessage","handleKeyPress","shiftKey","onTyping","onKeyPress","Message","useContext","useState","disabled","setDisabled","useEffect","logoutPayload","loginPayload","isMsgOwner","_id","message","author","created","MessageList","messageList","messages","messageProps","id","onTypingMessage","ChatBoard","roomTitle","ChatUser","ChatUserList","userList","users","length","ChatSidebar","endpoint","Chat","room","match","params","componentDidUpdate","prevProps","socket","disconnect","createSocket","emit","liveMembers","slice","roomId","socketIOClient","query","addLiveMember","on","userId","isRemovingUser","off","getMessages","find","removeLiveMember","history","push","formData","moment","format","resetLoginPayload","resetLogoutPayload","App","removeAuth","successMsg","contextPayload","Provider","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.005a1ed0.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'development'\n      ? 'https://chatty-appy-api.herokuapp.com/'\n      : '',\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Access-Control-Allow-Origin': '*'\n  }\n})\n\nconsole.log(process.env.NODE_ENV)\n\nexport default instance\n","import Axios from './axiosConfig'\nimport jwt_decode from 'jwt-decode'\n\nexport const setAuthHeader = token => {\n  if (token) {\n    Axios.defaults.headers.common['Authorization'] = 'Bearer ' + token\n  } else {\n    delete Axios.defaults.headers.common['Authorization']\n  }\n}\n\nexport const checkTokenAndReturn = () => {\n  const token = localStorage.getItem('token')\n  if (!token) return null\n\n  const userData = jwt_decode(token)\n\n  const currentTime = Date.now() / 1000\n\n  if (userData.exp < currentTime) {\n    localStorage.removeItem('token')\n    setAuthHeader(null)\n    return null\n  } else {\n    setAuthHeader(token)\n    return userData\n  }\n}\n\nexport const signup = async formBody => {\n  try {\n    let response = await Axios.post('/api/users/signup', formBody)\n    return response\n  } catch (err) {\n    return err.response\n  }\n}\n\nexport const signin = async formBody => {\n  try {\n    let response = await Axios.post('/api/users/signin', formBody)\n    return response\n  } catch (err) {\n    return err.response\n  }\n}\n\nexport const getUser = async () => {\n  try {\n    let success = await Axios.get('/api/users/get-user')\n    return success.data\n  } catch (e) {\n    return e.response\n  }\n}\nexport const editUser = async user => {\n  try {\n    let success = await Axios.put('/api/users/edit-user', user)\n\n    return success\n  } catch (e) {\n    return e.response\n  }\n}\n\nexport const getChannelMessages = async roomName => {\n  try {\n    let response = await Axios.get(`/api/channels/getMessages/${roomName}`)\n    return response\n  } catch (err) {\n    return err.response\n  }\n}\n\nexport const getChannelUsers = async roomName => {\n  try {\n    let response = await Axios.get(`/api/channels/getUsers/${roomName}`)\n    return response\n  } catch (err) {\n    return err.response\n  }\n}\n","import { createContext } from \"react\";\n\nexport default createContext({});\n","import React, { Component } from \"react\"\nimport {\n  signup,\n  setAuthHeader,\n  checkTokenAndReturn\n} from \"../../../../../api/axios-helpers\"\nimport Context from \"../../../../Context/Context\"\n\nclass RegisterForm extends Component {\n  static contextType = Context\n\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n\n    if (this.state.password !== this.state.confirmPassword) {\n      console.log(\"password and confirm password don't match\")\n      return\n    }\n\n    try {\n      let res = await signup(this.state)\n\n      if (res.status === 200) {\n        setAuthHeader(res.data.token)\n        localStorage.setItem(\"token\", res.data.token)\n        this.context.setAuth(checkTokenAndReturn())\n      }\n\n      if (res.status === 400) {\n        let { errors } = res.data\n        if (errors) {\n          if (errors.username && errors.username.kind === \"unique\") {\n            console.log(\"username taken\")\n          }\n          if (errors.email && errors.email.kind === \"unique\") {\n            console.log(\"email taken\")\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    let form = (\n      <div className=\"navTabContent\">\n        <form className=\"navTabForm register\" onSubmit={this.handleSubmit}>\n          <h5>Register</h5>\n          <label>\n            <h6>Username</h6>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n          </label>\n          <label>\n            <h6>Email</h6>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </label>\n          <label>\n            <h6>Password</h6>\n            <input\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </label>\n          <label>\n            <h6>Confirm password</h6>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              autoComplete=\"confirm-password\"\n              onChange={this.handleChange}\n              placeholder=\"Confirm password\"\n              value={this.state.confirmPassword}\n            />\n          </label>\n          <br />\n          <input className=\"navButton\" type=\"submit\" value=\"Register\" />\n        </form>\n      </div>\n    )\n    return form\n  }\n}\n\nexport default RegisterForm\n","import React, { Component } from 'react'\nimport {\n  signin,\n  setAuthHeader,\n  checkTokenAndReturn\n} from '../../../../../api/axios-helpers'\nimport Context from '../../../../Context/Context'\n\nclass LoginForm extends Component {\n  static contextType = Context\n\n  state = {\n    username: '',\n    email: '',\n    password: ''\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n\n    try {\n      let res = await signin(this.state)\n\n      if (res.status === 200) {\n        setAuthHeader(res.data.token)\n        localStorage.setItem('token', res.data.token)\n        this.context.setAuth(checkTokenAndReturn())\n      }\n\n      if (res.status === 400) {\n        let errorMsg = res.data\n\n        this.context.handleToast(null, errorMsg)\n      }\n    } catch (e) {\n      console.log(`e`, e)\n    }\n  }\n\n  render() {\n    let form = (\n      <div className=\"navTabContent\">\n        <form className=\"navTabForm login\" onSubmit={this.handleSubmit}>\n          <h5>Login</h5>\n          <label>\n            <h6>Username</h6>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              placeholder=\"Username\"\n            />\n          </label>\n          <label>\n            <h6>Password</h6>\n            <input\n              type=\"password\"\n              autoComplete=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              placeholder=\"Password\"\n            />\n          </label>\n          <br />\n          <input className=\"navButton\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    )\n    return form\n  }\n}\n\nexport default LoginForm\n","import React, { Component } from \"react\"\nimport Context from \"../../../Context/Context\"\nimport { getUser } from \"../../../../api/axios-helpers\"\n\nexport default class UserProfile extends Component {\n  static contextType = Context\n\n  state = {\n    user: {}\n  }\n\n  componentDidMount() {\n    this.getUserInfo()\n  }\n\n  getUserInfo = async () => {\n    try {\n      let user = await getUser()\n      this.setState({\n        user: user\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    let { user } = this.state\n\n    return (\n      <div>\n        <h5>Hello {user.username}</h5>\n\n        <div className=\"profilePic\">\n          <img\n            src={user.photo === \"\" ? \"/animal-15-512.png\" : user.photo}\n            alt=\"profile avatar\"\n          />\n        </div>\n        <div className=\"navButton logoutBtn\" onClick={this.context.logout}>\n          Logout\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { getUser, editUser } from \"../../../../api/axios-helpers\"\nimport Context from \"../../../Context/Context\"\n\nexport default class EditUser extends Component {\n  static contextType = Context\n\n  state = {\n    user: null,\n    username: \"\",\n    email: \"\",\n    oldPassword: \"\",\n    password: \"\",\n    confirmNewPassword: \"\",\n    photo: \"\"\n  }\n\n  componentDidMount() {\n    this.getUserInfo()\n  }\n\n  getUserInfo = async () => {\n    try {\n      let user = await getUser()\n      this.setState({\n        user: user,\n        username: user.username,\n        email: user.email\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n\n    if (this.state.password !== this.state.confirmNewPassword) {\n      this.context.handleToast(\n        null,\n        \"Password and confirm password don't match\"\n      )\n      return\n    }\n    if (\n      this.state.oldPassword &&\n      this.state.oldPassword === this.state.password\n    ) {\n      this.context.handleToast(\n        null,\n        \"Old password and new password cannot be the same\"\n      )\n      return\n    }\n\n    let updatedUser = {}\n\n    for (const key in this.state) {\n      let element = this.state[key]\n      if (\n        element &&\n        key !== \"user\" &&\n        key !== \"confirmNewPassword\" &&\n        element !== this.state.user[key]\n      ) {\n        updatedUser[key] = element\n      }\n    }\n\n    try {\n      let user = await editUser(updatedUser)\n\n      if (user.status === 200) {\n        //   TODO: open profile tab\n        this.context.handleToast(\"Profile edit successful\", null)\n      }\n      if (user.status === 400) {\n        this.context.handleToast(null, \"Poops, you did something wrong 💩💩💩\")\n      }\n    } catch (e) {\n      this.context.handleToast(null, \"Poops, you did something wrong 💩💩💩\")\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"navTabContent\">\n        <form className=\"navTabForm edit\" onSubmit={this.handleSubmit}>\n          <h5>Edit Profile</h5>\n          <label>\n            <h6>Username</h6>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n          </label>\n          <label>\n            <h6>Email</h6>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </label>\n          <label>\n            <br />\n            <label>\n              <h6>Change avatar</h6>\n              <input\n                type=\"text\"\n                name=\"photo\"\n                onChange={this.handleChange}\n                placeholder=\"Avatar URL\"\n                value={this.state.photo}\n              />\n            </label>\n            <br />\n            <br />\n            <h5>Change password</h5>\n            <h6>Old Password</h6>\n            <input\n              type=\"password\"\n              name=\"oldPassword\"\n              autoComplete=\"password\"\n              placeholder=\"Old password\"\n              onChange={this.handleChange}\n              value={this.state.oldPassword}\n            />\n          </label>\n          <label>\n            <h6>New Password</h6>\n            <input\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              placeholder=\"New password\"\n              onChange={this.handleChange}\n              value={this.state.newPassword}\n            />\n          </label>\n          <label>\n            <h6>Confirm new password</h6>\n            <input\n              type=\"password\"\n              name=\"confirmNewPassword\"\n              autoComplete=\"confirm-password\"\n              onChange={this.handleChange}\n              placeholder=\"Confirm new password\"\n              value={this.state.confirmPassword}\n            />\n          </label>\n          <br />\n          <input className=\"navButton\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nexport default class FadeInOut extends Component {\n  state = {\n    maxIsVisible: 0\n  }\n\n  delay = () => {\n    return this.props.delay || 50\n  }\n\n  componentDidMount() {\n    const count = React.Children.count(this.props.children)\n    let i = 0\n    this.interval = setInterval(() => {\n      i++\n      if (i > count) clearInterval(this.interval)\n\n      this.setState({ maxIsVisible: i })\n    }, this.delay())\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  timeOut = () => {\n    setTimeout(() => {\n      this.setState({ maxIsVisible: 0 })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {React.Children.map(this.props.children, (child, i) => {\n          return (\n            <div\n              className={this.props.childClassName}\n              style={{\n                transition: `opacity 400ms, left 400ms`,\n                top: this.state.maxIsVisible > i ? 0 : 20,\n                opacity: this.state.maxIsVisible > i ? 1 : 0\n              }}\n            >\n              {child}\n              {this.timeOut()}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport Context from \"../../Context/Context\"\nimport UsernameGenerator from \"username-generator\"\nimport FadeInOut from \"../../FadeInOut/FadeInOut\"\n\nexport default class Tabs extends Component {\n  static contextType = Context\n\n  state = {\n    activeTab: \"\"\n  }\n\n  componentDidMount() {\n    if (!this.context.isAuth) {\n      this.handleTabClick(0)\n    }\n  }\n\n  handleTabClick = tab => {\n    if (tab === this.state.activeTab) {\n      return\n    } else {\n      this.setState({\n        activeTab: tab === this.state.activeTab ? \"\" : tab\n      })\n    }\n  }\n\n  renderTabsChildrenAsProps = () => {\n    //? 'React.Children' = this.props.children: whatever you include between the opening and closing tags when invoking a component\n    return React.Children.map(this.props.children, (child, index) => {\n      if (this.state.activeTab === index) {\n        return React.cloneElement(child, {\n          onClick: this.handleTabClick,\n          tab: index,\n          bgColor: \"#262626\"\n        })\n      } else {\n        //? 'cloneElement': returns a copy of a specified element. Additional props and children can be passed on in the function. You would use this function when a parent component wants to add or modify the prop(s) of its children.\n        return React.cloneElement(child, {\n          onClick: this.handleTabClick,\n          tab: index,\n          bgColor: \"#161515\"\n        })\n      }\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    const { activeTab } = this.state\n\n    return (\n      <div>\n        <div className=\"tabs\">\n          <div className=\"tabsNav\">{this.renderTabsChildrenAsProps()}</div>\n          {children[activeTab] ? (\n            <div className=\"activeTabContent\">\n                \n              {/* Notification error/success Tag */}\n              {this.context.toastMsg.success ? (\n                <FadeInOut>\n                  <div className=\"notificationTag successNotification\">\n                    {this.context.toastMsg.success}\n                  </div>\n                </FadeInOut>\n              ) : (\n                \"\"\n              )}\n              {this.context.toastMsg.error ? (\n                <FadeInOut>\n                  <div className=\"notificationTag errorNotification\">\n                    {this.context.toastMsg.error}\n                  </div>\n                </FadeInOut>\n              ) : (\n                \"\"\n              )}\n\n              {children[activeTab].props.children}\n              {children[activeTab].props.className === \"login-tab\" ? (\n                <>\n                  <div className=\"guestBlock\">\n                    <p className=\"guestText\">\n                      You are currently chatting as <br />\n                      <span>{UsernameGenerator.generateUsername(\"-\")}</span>\n                      <br />\n                      (Guest User)\n                    </p>\n                    <br />\n                    <p className=\"guestText\">\n                      Would you like to{\" \"}\n                      <a\n                        className={`tabLink register-tab registerGuestLink`}\n                        onClick={event => {\n                          event.preventDefault()\n                          this.handleTabClick(1)\n                        }}\n                      >{`register`}</a>{\" \"}\n                      ?\n                    </p>\n                  </div>\n                </>\n              ) : (\n                \"\"\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nexport default class Tab extends Component {\n  state = {\n    isActive: false\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"tab\" style={{ backgroundColor: this.props.bgColor }}>\n          <a\n            href=\"#\"\n            className={`tabLink ${this.props.className}\n        ${this.props.isActive}\n        `}\n            onClick={event => {\n              event.preventDefault()\n              this.props.onClick(this.props.tab)\n            }}\n          >\n            {`${this.props.label}`}\n          </a>\n        </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport RegisterForm from './Tabs/TabContent/RegisterForm/RegisterForm'\nimport LoginForm from './Tabs/TabContent/LoginForm/LoginForm'\nimport UserProfile from './TabContent/UserProfile/UserProfile'\nimport EditUser from './TabContent/EditUser/EditUser'\nimport Context from '../Context/Context'\nimport Tabs from './Tabs/Tabs'\nimport Tab from './Tabs/Tab'\nimport { Link, NavLink } from 'react-router-dom'\nimport './Nav.css'\n\nconst errorToastColor = {\n  background: '#f23535',\n  text: '#fff'\n}\nconst toastColor = {\n  background: '#3f51b5',\n  text: '#fff'\n}\n\nexport default class Nav extends Component {\n  static contextType = Context\n\n  state = {\n    notification: null,\n    channels: ['General', 'Dogs']\n  }\n\n  componentDidMount() {\n    // Error/success notification check\n    if (this.context.toastMsg.success) {\n      this.setState({\n        notification: this.context.toastMsg.success\n      })\n    }\n    if (this.context.toastMsg.error) {\n      this.setState({\n        notification: this.context.toastMsg.error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"navMain\">\n        {/* App title */}\n\n        <div className=\"appTitle\">Chat App</div>\n\n        {/* Channels */}\n        <div className=\"channels\">\n          {this.state.channels.map((channel, i) => (\n            <div key={i}>\n              <Link className=\"chnl\" to={`/channel/${channel}`}>\n                {channel}\n              </Link>\n            </div>\n          ))}\n        </div>\n\n        {/* Register / Login tabs */}\n        {this.context.isAuth ? (\n          <Tabs>\n            <Tab className=\"profile-tab\" label=\"Profile\">\n              <br />\n              <div>\n                <div className=\"tabContent\">\n                  <UserProfile user={this.state.user} />\n                </div>\n              </div>\n            </Tab>\n            <Tab className=\"edit-profile-tab\" label=\"Edit\">\n              <div>\n                <div className=\"tabContent\">\n                  <EditUser user={this.state.user} />\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        ) : (\n          <Tabs>\n            <Tab className=\"login-tab\" label=\"Login\">\n              <br />\n              <div>\n                <div className=\"tabContent\">\n                  <LoginForm />\n                </div>\n              </div>\n            </Tab>\n            <Tab className=\"register-tab\" label=\"Register\">\n              <div>\n                <div className=\"tabContent\">\n                  <RegisterForm />\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        )}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Context from '../../../Context/Context'\n\nclass SendMessageForm extends Component {\n  static contextType = Context\n\n  state = {\n    body: ''\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n\n    if (this.state.body.trim()) {\n      this.props.createMessage(this.state)\n      this.setState({ body: '' })\n    } else {\n      console.log('messages cannot be empty')\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      this.handleSubmit(e)\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.props.onTyping()\n  }\n\n  render() {\n    return (\n      <div className=\"sendMsg\">\n        <form className=\"msgForm\" onKeyPress={this.handleKeyPress}>\n          <textarea\n            className=\"writeMsgInput\"\n            name=\"body\"\n            value={this.state.body}\n            onChange={this.handleChange}\n            placeholder=\"Write a message...\"\n          />\n          <input\n            className=\"sendMsgButton\"\n            type=\"submit\"\n            value=\"\"\n            onClick={this.handleSubmit}\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SendMessageForm\n","import React, { useContext, useEffect, useState } from 'react'\nimport Context from '../../../../Context/Context'\n\nconst Message = props => {\n  const context = useContext(Context)\n\n  const [disabled, setDisabled] = useState(null)\n\n  useEffect(() => {\n    if (context.logoutPayload) {\n      setDisabled(true)\n    }\n\n    if (context.loginPayload) {\n      setDisabled(false)\n    }\n  })\n\n  let isMsgOwner =\n    !disabled && context.user && context.user._id === props.message.author._id\n      ? 'myMsg'\n      : ''\n  return (\n    <div className={`msg ${isMsgOwner}`}>\n      <div className=\"usernameInMsg\">{props.message.author.username}</div>\n      <div className=\"msgTxt\">{props.message.body}</div>\n      <div className=\"msgSent\">{props.message.created}</div>\n    </div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message/Message'\n\nexport default function MessageList(props) {\n  let messageList\n\n  if (props.messages) {\n    messageList = props.messages.map((messageProps, i) => (\n      <Message key={i} message={messageProps}></Message>\n    ))\n  }\n  return (\n    <div className=\"messageList\">\n      <div id=\"userTyping\">{props.onTypingMessage}</div>\n      <div className=\"messageList2\">{messageList}</div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport SendMessageForm from './SendMessageForm/SendMessageForm'\nimport Context from '../../Context/Context'\nimport MessageList from './MessageList/MessageList'\n\nexport default class ChatBoard extends Component {\n  static contextType = Context\n\n  render() {\n    let { props } = this\n    return (\n      <>\n        {/* Chat board */}\n        <div className=\"chatBoard\">\n          {/* Channel title */}\n          <div className=\"channelTitle\">\n            <p className=\"title\">\n              @{props.roomTitle ? props.roomTitle : 'General'}\n            </p>\n          </div>\n\n          {/* Messages in the channel */}\n          <div className=\"channelMessages\">\n            <MessageList\n              messages={this.props.messages}\n              onTypingMessage={this.props.onTypingMessage}\n            />\n          </div>\n\n          <SendMessageForm\n            createMessage={this.props.createMessage}\n            onTyping={this.props.onTyping}\n          />\n        </div>\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nfunction ChatUser(props) {\n  return <div className=\"userCurrentlyInChat\">{props.username}</div>\n}\n\nexport default ChatUser\n","import React from 'react'\nimport ChatUser from './ChatUser/ChatUser'\n\nfunction ChatUserList(props) {\n  let userList = `-- no users --`\n\n  if (props.users.length) {\n    userList = props.users.map((user, i) => <ChatUser {...user} key={i} />)\n  }\n\n  return <div className=\"onlineUsersList\">{userList}</div>\n}\n\nexport default ChatUserList\n","import React, { Component } from 'react'\nimport ChatUserList from './ChatUserList/ChatUserList'\n\nexport default class ChatSidebar extends Component {\n  render() {\n    return (\n      <div className=\"inChat\">\n        <div className=\"onlineTitle\">In chat</div>\n        <ChatUserList users={this.props.users} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ChatBoard from './ChatBoard/ChatBoard'\nimport ChatSidebar from './ChatSidebar/ChatSidebar'\nimport socketIOClient from 'socket.io-client'\nimport moment from 'moment'\nimport Context from '../Context/Context'\nimport {\n  checkTokenAndReturn,\n  getChannelUsers,\n  getChannelMessages\n} from '../../api/axios-helpers'\nimport './Chat.css'\n\nlet endpoint = 'https://chatty-appy-api.herokuapp.com/'\n\nclass Chat extends Component {\n  static contextType = Context\n\n  state = {\n    messages: [],\n    users: [],\n    room: this.props.match.params.name || 'General',\n    channel: null,\n    onTypingMessage: ''\n  }\n\n  componentDidUpdate = prevProps => {\n    if (this.props.match.params.name !== prevProps.match.params.name) {\n      this.socket.disconnect()\n\n      this.setState({ room: this.props.match.params.name }, () => {\n        this.createSocket()\n      })\n    }\n  }\n\n  onChange = () => {\n    this.socket.emit('onTyping', this.context.user)\n  }\n\n  componentDidMount() {\n    this.createSocket()\n  }\n\n  createSocket = async () => {\n    try {\n      let response = await getChannelUsers(this.state.room)\n\n      if (response.data) {\n        this.setState({\n          users: response.data.liveMembers,\n          messages: response.data.messages.slice(-10),\n          roomId: response.data._id,\n          channel: response.data\n        })\n      }\n    } catch (error) {\n      console.log(error)\n    }\n\n    this.socket = socketIOClient(endpoint, {\n      query: `roomName=${this.state.room}`\n    })\n\n    if (!this.state.channel) {\n      this.socket.emit('createNewChannel')\n    }\n\n    if (localStorage.getItem('token')) {\n      this.addLiveMember()\n    }\n\n    this.socket.on('chatroomUsers', (users, userId, isRemovingUser) => {\n      this.setState({ users: users }, () => {\n        if (isRemovingUser) {\n          this.socket.disconnect()\n          this.socket.off()\n          this.createSocket()\n        }\n      })\n    })\n\n    this.socket.on('someoneTyping', username => {\n      this.setState({ onTypingMessage: `${username} is typing..` }, () => {\n        setTimeout(() => {\n          this.setState({ onTypingMessage: '' })\n        }, 1500)\n      })\n    })\n\n    this.socket.on('chat', message => {\n      this.setState({ messages: [...this.state.messages, message] })\n    })\n  }\n\n  getMessages = async () => {\n    try {\n      let response = await getChannelMessages()\n\n      if (response.status === 200) {\n        this.setState({ messages: response.data })\n      }\n    } catch (err) {\n      console.log(err.message)\n    }\n  }\n\n  addLiveMember = () => {\n    if (\n      this.context.user &&\n      !this.state.users.find(user => user._id === this.context.user._id)\n    ) {\n      this.socket.emit('sendUserToServer', this.context.user, this.state.room)\n    }\n  }\n\n  removeLiveMember = () => {\n    this.socket.emit(\n      'removeUserFromActiveChat',\n      this.context.user,\n      this.state.room\n    )\n\n    this.props.history.push('/channel/General')\n  }\n\n  // initialConnect = () => {\n  //   let user = checkTokenAndReturn()\n\n  //   if (user) {\n  //     let message = {\n  //       body: `${user.username} has joined @${this.state.room}`,\n  //       author: user._id,\n  //       created: moment().format('LT'),\n  //       channel: this.state.roomId\n  //     }\n\n  //     this.socket.emit('createMessage', message)\n  //     return message\n  //   } else {\n  //     return false\n  //   }\n  // }\n\n  // terminateConnect = () => {\n  //   let { user } = this.context\n\n  //   if (user) {\n  //     let message = {\n  //       body: `${user.username} has left @${this.state.room}`,\n  //       author: user._id,\n  //       created: moment().format('LT'),\n  //       channel: this.state.roomId\n  //     }\n\n  //     this.socket.emit('createMessage', message)\n  //   }\n  // }\n\n  createMessage = formData => {\n    let user = checkTokenAndReturn()\n\n    if (user) {\n      let message = {\n        ...formData,\n        author: user._id,\n        created: moment().format('LT'),\n        channel: this.state.roomId\n      }\n      this.socket.emit('createMessage', message)\n    }\n  }\n\n  render() {\n    if (this.context.loginPayload) {\n      this.addLiveMember()\n      this.context.resetLoginPayload()\n    }\n\n    if (this.context.logoutPayload) {\n      this.removeLiveMember()\n      this.context.resetLogoutPayload()\n    }\n\n    return (\n      <div className=\"chatMain\">\n        <ChatBoard\n          createMessage={this.createMessage}\n          onTyping={this.onChange}\n          onTypingMessage={this.state.onTypingMessage}\n          messages={this.state.messages}\n          roomTitle={this.props.match.params.name}\n        />\n\n        <ChatSidebar users={this.state.users} />\n      </div>\n    )\n  }\n}\n\nexport default Chat\n","import React, { Component } from 'react'\nimport Nav from './components/Nav/Nav'\nimport Chat from './components/Chat/Chat'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport { checkTokenAndReturn, setAuthHeader } from './api/axios-helpers'\nimport Context from './components/Context/Context'\n\nclass App extends Component {\n  static contextType = Context\n\n  state = {\n    isAuth: false,\n    user: checkTokenAndReturn(),\n    toastMsg: {\n      success: null,\n      error: null\n    },\n    loginPayload: null,\n    logoutPayload: null\n  }\n\n  resetLoginPayload = () => {\n    this.setState({ loginPayload: null })\n  }\n  resetLogoutPayload = () => {\n    this.setState({ logoutPayload: null })\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.setState({ isAuth: true })\n    }\n  }\n\n  setAuth = user => {\n    this.setState({\n      isAuth: true,\n      user: user,\n      loginPayload: user\n    })\n  }\n\n  removeAuth = () => {\n    this.setState({ isAuth: false })\n    localStorage.removeItem('token')\n  }\n\n  logout = () => {\n    setAuthHeader(null)\n    this.setState({ logoutPayload: this.state.user })\n    this.removeAuth()\n  }\n\n  handleToast = (successMsg, errorMsg) => {\n    this.setState({\n      toastMsg: {\n        success: successMsg,\n        error: errorMsg\n      }\n    })\n  }\n\n  render() {\n    let contextPayload = {\n      isAuth: this.state.isAuth,\n      user: this.state.user,\n      setAuth: this.setAuth,\n      removeAuth: this.removeAuth,\n      logout: this.logout,\n      handleToast: this.handleToast,\n      toastMsg: this.state.toastMsg,\n      createMessage: this.createMessage,\n      loginPayload: this.state.loginPayload,\n      logoutPayload: this.state.logoutPayload,\n      resetLoginPayload: this.resetLoginPayload,\n      resetLogoutPayload: this.resetLogoutPayload\n    }\n    return (\n      <>\n        <Context.Provider value={contextPayload}>\n          <div className=\"App\">\n            <Nav />\n            <Switch>\n              <Route path=\"/channel/:name\" component={Chat} />\n              <Route component={Chat} />\n            </Switch>\n          </div>\n        </Context.Provider>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}